rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Regra base: negar todos os acessos por padrão
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Regras para arquivos de usuários
    match /{userId}/{type}/{fileName} {
      // Permitir leitura se autenticado e dono do arquivo
      allow read: if request.auth != null && 
                 request.auth.uid == userId;
                 
      // Permitir upload se autenticado, dono e arquivo válido
      allow write: if request.auth != null && 
                  request.auth.uid == userId &&
                  validateFileUpload(request);
    }
    
    // Função para validar upload de arquivo
    function validateFileUpload(request) {
      // Verificar tamanho do arquivo (max 10MB)
      let maxSize = 10 * 1024 * 1024; 
      let isValidSize = request.resource.size < maxSize;
      
      // Verificar tipos de arquivo permitidos
      let isImage = request.resource.contentType.matches('image/.*');
      let isAudio = request.resource.contentType.matches('audio/.*');
      let isVideo = request.resource.contentType.matches('video/.*');
      let isValidType = isImage || isAudio || isVideo;
      
      return isValidSize && isValidType;
    }
  }
}
